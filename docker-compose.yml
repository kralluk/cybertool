services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    networks:
      - cyberlab-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  init:
    image: ghcr.io/arkime/arkime/arkime:v5-latest
    container_name: arkime-init
    command: /opt/arkime/db/db.pl --insecure http://elasticsearch:9200 init
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./arkime/raw:/opt/arkime/raw
      - ./arkime/etc:/opt/arkime/etc
    networks:
      - cyberlab-net
   
  # capture:
  #   image: ghcr.io/arkime/arkime/arkime:v5-latest
  #   container_name: arkime-capture
  #   command: /opt/arkime/bin/docker.sh capture --update-geo
  #   environment:
  #     - ARKIME__elasticsearch=http://localhost:9200
  #   volumes:
  #     - ./arkime/raw:/opt/arkime/raw
  #     - ./arkime/etc:/opt/arkime/etc
  #   depends_on:
  #     init:
  #       condition: service_completed_successfully
  #     elasticsearch:
  #       condition: service_healthy
  #   network_mode: host
  #   cap_add:
  #     - NET_ADMIN
  #     - NET_RAW
  #   privileged: true
  capture:
    build:
      context: .
      dockerfile: dockerfile.capture
    container_name: arkime-capture
    environment:
      - ARKIME__elasticsearch=http://localhost:9200
      # Pokud Arkime čte tyto hodnoty z konfiguračního souboru,
      # ujisti se, že v ./arkime/etc/config.ini jsou tyto položky nastaveny:
      # dropUser=arkimeuser
      # dropGroup=arkimegroup
    volumes:
      - ./arkime/raw:/opt/arkime/raw
      - ./arkime/etc:/opt/arkime/etc
    depends_on:
      init:
        condition: service_completed_successfully
      elasticsearch:
        condition: service_healthy
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true  

  viewer:
    build:
      context: .
      dockerfile: dockerfile.viewer
    container_name: arkime-viewer
    environment:
      - ARKIME__elasticsearch=http://elasticsearch:9200/
    volumes:
      - ./arkime/raw:/opt/arkime/raw
      - ./arkime/etc:/opt/arkime/etc
    ports:
      - "8005:8005"
    depends_on:
      init:
        condition: service_completed_successfully
      elasticsearch:
        condition: service_healthy
    networks:
      - cyberlab-net

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-backup:/data/backup
    command: >
      bash -c "
      mongod --fork --logpath /var/log/mongodb.log --bind_ip_all &&
      mongorestore --uri=mongodb://localhost:27017 /data/backup &&
      while true; do sleep 300; mongodump --uri=mongodb://localhost:27017 --db=cybertest_tool --out=/data/backup; done
      "
    networks:
      - cyberlab-net

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/cybertest_tool
      ME_CONFIG_SITE_SESSIONSECRET: "supersecret"
    networks:
      - cyberlab-net

  metasploit:
    build: 
      context: .
      dockerfile: dockerfile.msf
    container_name: metasploit
    restart: always
    network_mode: host

volumes:
  mongo-data:

networks:
  cyberlab-net:
    driver: bridge
